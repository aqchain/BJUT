package contract

import (
	"github.com/BJUT/aqchain/accounts/abi"
	"github.com/BJUT/aqchain/accounts/abi/bind"
	"github.com/BJUT/aqchain/common"
	"github.com/BJUT/aqchain/core/types"
	"strings"
)

const StoreABI = "[{\"constant\": true, \"inputs\": [{\"name\": \"fid\", \"type\": \"string\"}], \"name\": \"getOwner\", \"outputs\": [{\"name\": \"\", \"type\": \"address\"}], \"payable\": false, \"stateMutability\": \"view\",\"type\": \"function\"},{\"constant\": false, \"inputs\": [{\"name\": \"fid\", \"type\": \"string\"},{\"name\": \"owner\", \"type\": \"address\"}], \"name\": \"set\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\"}]"

const StoreBin = "0x608060405234801561001057600080fd5b506105ce806100206000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480634aaf4a1214610058578063a815ff1514610153575b600080fd5b6101116004803603602081101561006e57600080fd5b810190808035906020019064010000000081111561008b57600080fd5b82018360208201111561009d57600080fd5b803590602001918460018302840111640100000000831117156100bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061022e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022c6004803603604081101561016957600080fd5b810190808035906020019064010000000081111561018657600080fd5b82018360208201111561019857600080fd5b803590602001918460018302840111640100000000831117156101ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c5565b005b600080826040518082805190602001908083835b6020831015156102675780518252602082019150602081019050602083039250610242565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080836040518082805190602001908083835b6020831015156102fe57805182526020820191506020810190506020830392506102d9565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156103fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f66696c6520657873697465642e0000000000000000000000000000000000000081525060200191505060405180910390fd5b60408051908101604052808481526020018373ffffffffffffffffffffffffffffffffffffffff168152506000846040518082805190602001908083835b60208310151561045e5780518252602082019150602081019050602083039250610439565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906104ad9291906104fd565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061053e57805160ff191683800117855561056c565b8280016001018555821561056c579182015b8281111561056b578251825591602001919060010190610550565b5b509050610579919061057d565b5090565b61059f91905b8082111561059b576000816000905550600101610583565b5090565b9056fea165627a7a72305820ed1d19028936f95f30f304ac6f8bbffb9b7e35892e65da4f7e07a5269cc2d4030029"

func DeployStore(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Store, error) {
	parsed, err := abi.JSON(strings.NewReader(StoreABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(StoreBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Store{StoreCaller: StoreCaller{contract: contract}, StoreTransactor: StoreTransactor{contract: contract}, StoreFilterer: StoreFilterer{contract: contract}}, nil
}

// Chequebook is an auto generated Go binding around an Ethereum contract.
type Store struct {
	StoreCaller     // Read-only binding to the contract
	StoreTransactor // Write-only binding to the contract
	StoreFilterer   // Log filterer for contract events
}

// ChequebookCaller is an auto generated read-only Go binding around an Ethereum contract.
type StoreCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChequebookTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StoreTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChequebookFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StoreFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}